
What happens when you initialize a repository? Why do you need to do it?

        Git create a repository called .git to keep track of the files in the
        current directory. I need to do it to be able to create commits for
        my current project.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

        I believe the staging are is an intermediate place between the working
        directory and the repository. But I still don't understand very much
        the differences between them.

How can you use the staging area to make sure you have one commit per logical
change?

        Once I make a change to a file, I can run git status to see which files
        have been changed. If I run "git diff" I'll be able to see the differen-
        ces between the files in the Staging area and the Working Directory. In
        this way, I can make sure I'll commit the right changes.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

        When I want to make a test in my code, or I want to make a same version
        but while somebody else is working in the master branch. Or while I am
        fixing a bug in the master branch and somebody else need to work on ano-
        ther bug, so he can creat a branch and start working on it without wor-
        ries cause when the guy's done we just have to merge the two.

        This tool is very helpful to try out different codes and work with dif-
        ferent people. This way somebody else's work will never harm another
        person's work.

How do the diagrams help you visualize the branch structure?

        It shows the exactly place the branch was created and this makes it
        easier to see the commits' parents a track them.
